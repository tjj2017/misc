CBMC version 5.12 (cbmc-5.12-36-g5568f6482) 64-bit x86_64 linux
Parsing arr.c
Converting
Type-checking arr
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__CPROVER__start /* __CPROVER__start */
        // 26 no location
        // Labels: __CPROVER_HIDE
        __CPROVER_initialize();
        // 27 file arr.c line 2
        main();
        // 28 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__CPROVER_initialize /* __CPROVER_initialize */
        // 10 file <built-in-additions> line 20
        // Labels: __CPROVER_HIDE
        __CPROVER_alloca_object = NULL;
        // 11 file <built-in-additions> line 14
        __CPROVER_dead_object = NULL;
        // 12 file <built-in-additions> line 13
        __CPROVER_deallocated = NULL;
        // 13 file <built-in-additions> line 17
        __CPROVER_malloc_is_new_array = 0 != 0;
        // 14 file <built-in-additions> line 15
        __CPROVER_malloc_object = NULL;
        // 15 file <built-in-additions> line 16
        __CPROVER_malloc_size = 0ul;
        // 16 file <built-in-additions> line 18
        __CPROVER_memory_leak = NULL;
        // 17 file <built-in-additions> line 8
        __CPROVER_next_thread_id = (unsigned long int)0;
        // 18 file <built-in-additions> line 11
        __CPROVER_next_thread_key = (unsigned long int)0;
        // 19 file <built-in-additions> line 33
        __CPROVER_pipe_count = (unsigned int)0;
        // 20 file <built-in-additions> line 24
        __CPROVER_rounding_mode = 0;
        // 21 file <built-in-additions> line 6
        __CPROVER_thread_id = (unsigned long int)0;
        // 22 file <built-in-additions> line 10
        __CPROVER_thread_key_dtors = ARRAY_OF(((void (*)(void *))NULL));
        // 23 file <built-in-additions> line 9
        __CPROVER_thread_keys = ARRAY_OF(NULL);
        // 24 file <built-in-additions> line 7
        __CPROVER_threads_exited = ARRAY_OF(FALSE);
        // 25 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

main /* main */
        // 0 file arr.c line 4 function main
        signed int i;
        // 1 file arr.c line 4 function main
        signed int x;
        // 2 file arr.c line 5 function main
        signed int arr[10l];
        // 3 file arr.c line 6 function main
        i = 0;
        // 4 file arr.c line 7 function main
        arr[(signed long int)i] = 23;
        // 5 file arr.c line 8 function main
        ASSERT arr[(signed long int)i] == x // assertion arr[i] == x
        // 6 file arr.c line 9 function main
        dead arr;
        // 7 file arr.c line 9 function main
        dead x;
        // 8 file arr.c line 9 function main
        dead i;
        // 9 file arr.c line 9 function main
        END_FUNCTION

