CBMC version 5.12 (cbmc-5.12-36-g5568f6482) 64-bit x86_64 linux
Parsing arr_index.c
Converting
Type-checking arr_index
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Running with 8 object bits, 56 offset bits (default)
Starting Bounded Model Checking
BMC at file <built-in-additions> line 20 (depth 1)
Assignment to __CPROVER_alloca_object [64 bits]
BMC at file <built-in-additions> line 14 (depth 2)
Assignment to __CPROVER_dead_object [64 bits]
BMC at file <built-in-additions> line 13 (depth 3)
Assignment to __CPROVER_deallocated [64 bits]
BMC at file <built-in-additions> line 17 (depth 4)
Assignment to __CPROVER_malloc_is_new_array [1 bits]
BMC at file <built-in-additions> line 15 (depth 5)
Assignment to __CPROVER_malloc_object [64 bits]
BMC at file <built-in-additions> line 16 (depth 6)
Assignment to __CPROVER_malloc_size [64 bits]
BMC at file <built-in-additions> line 18 (depth 7)
Assignment to __CPROVER_memory_leak [64 bits]
BMC at file <built-in-additions> line 8 (depth 8)
Assignment to __CPROVER_next_thread_id [64 bits]
BMC at file <built-in-additions> line 11 (depth 9)
Assignment to __CPROVER_next_thread_key!0 [64 bits]
BMC at file <built-in-additions> line 33 (depth 10)
Assignment to __CPROVER_pipe_count [32 bits]
BMC at file <built-in-additions> line 24 (depth 11)
Assignment to __CPROVER_rounding_mode!0 [32 bits]
BMC at file <built-in-additions> line 6 (depth 12)
Assignment to __CPROVER_thread_id!0 [64 bits]
BMC at file <built-in-additions> line 10 (depth 13)
Assignment to __CPROVER_thread_key_dtors!0 [0 bits]
BMC at file <built-in-additions> line 9 (depth 14)
Assignment to __CPROVER_thread_keys!0 [0 bits]
BMC at file <built-in-additions> line 7 (depth 15)
Assignment to __CPROVER_threads_exited [0 bits]
BMC at file arr_index.c line 2 (depth 17)
BMC at file arr_index.c line 4 function main (depth 18)
BMC at file arr_index.c line 5 function main (depth 20)
BMC at file arr_index.c line 7 function main (depth 21)
Assignment to main::1::i!0@1 [32 bits]
BMC at file arr_index.c line 8 function main (depth 22)
Assignment to main::1::arr!0@1[cast(main::1::i!0@1, signedbv[64])] [32 bits]
BMC at file arr_index.c line 9 function main (depth 23)
Assignment to main::1::x!0@1 [32 bits]
BMC at file arr_index.c line 10 function main (depth 24)
BMC at file arr_index.c line 11 function main (depth 25)
size of program expression: 39 steps
simple slicing removed 2 assignments
Generated 1 VCC(s), 1 remaining after simplification
Passing problem to propositional reduction
converting SSA
Thread 0
LOCATION
Guard: true

Thread 0
FUNCTION_CALL
Guard: true

Thread 0 file <built-in-additions> line 20
SHARED WRITE
__CPROVER_alloca_object#1
Guard: true

Thread 0 file <built-in-additions> line 20
ASSIGNMENT (HIDDEN)
__CPROVER_alloca_object#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 14
SHARED WRITE
__CPROVER_dead_object#1
Guard: true

Thread 0 file <built-in-additions> line 14
ASSIGNMENT (HIDDEN)
__CPROVER_dead_object#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 13
SHARED WRITE
__CPROVER_deallocated#1
Guard: true

Thread 0 file <built-in-additions> line 13
ASSIGNMENT (HIDDEN)
__CPROVER_deallocated#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 17
SHARED WRITE
__CPROVER_malloc_is_new_array#1
Guard: true

Thread 0 file <built-in-additions> line 17
ASSIGNMENT (HIDDEN)
__CPROVER_malloc_is_new_array#1 ⇔ false
Guard: true

Thread 0 file <built-in-additions> line 15
SHARED WRITE
__CPROVER_malloc_object#1
Guard: true

Thread 0 file <built-in-additions> line 15
ASSIGNMENT (HIDDEN)
__CPROVER_malloc_object#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 16
SHARED WRITE
__CPROVER_malloc_size#1
Guard: true

Thread 0 file <built-in-additions> line 16
ASSIGNMENT (HIDDEN)
__CPROVER_malloc_size#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 18
SHARED WRITE
__CPROVER_memory_leak#1
Guard: true

Thread 0 file <built-in-additions> line 18
ASSIGNMENT (HIDDEN)
__CPROVER_memory_leak#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 8
SHARED WRITE
__CPROVER_next_thread_id#1
Guard: true

Thread 0 file <built-in-additions> line 8
ASSIGNMENT (HIDDEN)
__CPROVER_next_thread_id#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 11
ASSIGNMENT (HIDDEN)
__CPROVER_next_thread_key!0#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 33
SHARED WRITE
__CPROVER_pipe_count#1
Guard: true

Thread 0 file <built-in-additions> line 33
ASSIGNMENT (HIDDEN)
__CPROVER_pipe_count#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 24
ASSIGNMENT (HIDDEN)
__CPROVER_rounding_mode!0#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 6
ASSIGNMENT (HIDDEN)
__CPROVER_thread_id!0#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 10
ASSIGNMENT (HIDDEN)
__CPROVER_thread_key_dtors!0#1 = array_of #source_location=""(NULL)
Guard: true

Thread 0 file <built-in-additions> line 9
ASSIGNMENT (HIDDEN)
__CPROVER_thread_keys!0#1 = array_of #source_location=""(NULL)
Guard: true

Thread 0 file <built-in-additions> line 7
SHARED WRITE
__CPROVER_threads_exited#1
Guard: true

Thread 0 file <built-in-additions> line 7
ASSIGNMENT (HIDDEN)
__CPROVER_threads_exited#1 = array_of #source_location=""(false)
Guard: true

Thread 0
FUNCTION_RETURN
Guard: true

Thread 0 file arr_index.c line 2
LOCATION
Guard: true

Thread 0 file arr_index.c line 2
FUNCTION_CALL
Guard: true

Thread 0 file arr_index.c line 4 function main
DECL
main::1::i!0@1#1
Guard: true

Thread 0 file arr_index.c line 4 function main
DECL
main::1::x!0@1#1
Guard: true

Thread 0 file arr_index.c line 5 function main
DECL
main::1::arr!0@1#0
Guard: true

Thread 0 file arr_index.c line 7 function main
ASSIGNMENT (STATE)
main::1::i!0@1#2 = 5
Guard: true

Thread 0 file arr_index.c line 8 function main
ASSIGNMENT (STATE)
main::1::arr!0@1#2[[5]] = 23
Guard: true

Thread 0 file arr_index.c line 9 function main
ASSIGNMENT (STATE)
main::1::x!0@1#2 = 23
Guard: true

Thread 0 file arr_index.c line 10 function main
ASSERT false
false
assertion x == 19
Guard: true

Thread 0 file <built-in-additions> line 20
ASSIGNMENT (HIDDEN)
__CPROVER_alloca_object#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 14
ASSIGNMENT (HIDDEN)
__CPROVER_dead_object#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 13
ASSIGNMENT (HIDDEN)
__CPROVER_deallocated#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 17
ASSIGNMENT (HIDDEN)
__CPROVER_malloc_is_new_array#1 ⇔ false
Guard: true

Thread 0 file <built-in-additions> line 15
ASSIGNMENT (HIDDEN)
__CPROVER_malloc_object#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 16
ASSIGNMENT (HIDDEN)
__CPROVER_malloc_size#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 18
ASSIGNMENT (HIDDEN)
__CPROVER_memory_leak#1 = NULL
Guard: true

Thread 0 file <built-in-additions> line 8
ASSIGNMENT (HIDDEN)
__CPROVER_next_thread_id#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 11
ASSIGNMENT (HIDDEN)
__CPROVER_next_thread_key!0#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 33
ASSIGNMENT (HIDDEN)
__CPROVER_pipe_count#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 24
ASSIGNMENT (HIDDEN)
__CPROVER_rounding_mode!0#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 6
ASSIGNMENT (HIDDEN)
__CPROVER_thread_id!0#1 = 0
Guard: true

Thread 0 file <built-in-additions> line 10
ASSIGNMENT (HIDDEN)
__CPROVER_thread_key_dtors!0#1 = array_of #source_location=""(NULL)
Guard: true

Thread 0 file <built-in-additions> line 9
ASSIGNMENT (HIDDEN)
__CPROVER_thread_keys!0#1 = array_of #source_location=""(NULL)
Guard: true

Thread 0 file <built-in-additions> line 7
ASSIGNMENT (HIDDEN)
__CPROVER_threads_exited#1 = array_of #source_location=""(false)
Guard: true

Thread 0 file arr_index.c line 7 function main
ASSIGNMENT (STATE)
main::1::i!0@1#2 = 5
Guard: true

Thread 0 file arr_index.c line 8 function main
ASSIGNMENT (STATE)
main::1::arr!0@1#2[[5]] = 23
Guard: true

Thread 0 file arr_index.c line 9 function main
ASSIGNMENT (STATE)
main::1::x!0@1#2 = 23
Guard: true

Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
408 variables, 33 clauses
SAT checker: instance is SATISFIABLE
Runtime decision procedure: 0.000398158s

** Results:
arr_index.c function main
[main.assertion.1] line 10 assertion x == 19: FAILURE

** 1 of 1 failed (2 iterations)
VERIFICATION FAILED
